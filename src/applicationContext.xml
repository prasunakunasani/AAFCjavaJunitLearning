<?xml version="1.0" encoding="UTF-8"?>
<!--XML namespaces that are required for Spring to be able to process this file using it's grammer and XML schema -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <!--Load the properties file: sport.properties-->
    <context:property-placeholder location="classpath:sport.properties"/>

    <!-- Define your beans here -->


    <!--define the dependency-->
    <bean id="myFortuneService" class="springdemo.HappyFortuneService">

    </bean>

    <!--Step 1 - This configures the spring bean-->
    <!--the "id" here is like an alias-->
    <!--the class is the fully qualified class name(means packageName.className) of implementation class-->
    <!--the coach in class can be Track coach or Baseball couch, etc-->
    <bean id="myCoach" class = "springdemo.TrackCoach">
        <!--Set up constructor injection-->
        <constructor-arg ref="myFortuneService"/>
    </bean>

    <!--Step 2: Configure the dependency injection in Spring Config file-->
    <bean id="myCricketCoach" class="springdemo.CricketCoach">
        <!--set up setter injection. So, spring will call setFortuneService based on the name fortuneService-->
        <property name="fortuneService" ref="myFortuneService"/>

        <!--inject literal values-->
        <!--will call setEmailAddress and setTeam-->
        <property name="emailAddress" value="${foo.email}"/>
        <property name="team" value="${foo.team}"/>
    </bean>



    
</beans>





